{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNsB;AACtB;AACA;AACA;AACA,cAAc;AACd,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,mCAAmC,YAAY;AAC/C;AACA,KAAK;AACL;AACA;AACA;AACA,UAAU;AACV,kCAAkC,WAAW;AAC7C;AACA,KAAK;AACL","sources":["webpack://gamecards/./style.css?6429","webpack://gamecards/webpack/bootstrap","webpack://gamecards/webpack/runtime/make namespace object","webpack://gamecards/./JS/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import '../style.css';\r\nconst APP = document.querySelector('.app');\r\n\r\nwindow.application = {\r\n    blocks: {},\r\n    screens: {},\r\n    timers: [],\r\n    difficultyLevel: Number,\r\n    renderScreen: function (screenName) {\r\n        if (window.application.screens[screenName]) {\r\n            APP.innerHTML = '';\r\n            window.application.screens[screenName]();\r\n        } else {\r\n            console.warn(`Экрана ${screenName} не существует`);\r\n        }\r\n    },\r\n    renderBlock: function (blockName, container) {\r\n        if (window.application.blocks[blockName]) {\r\n            window.application.blocks[blockName](container);\r\n        } else {\r\n            console.warn(`Блока ${blockName} не существует`);\r\n        }\r\n    },\r\n};\r\n"],"names":[],"sourceRoot":""}